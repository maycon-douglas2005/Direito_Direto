@* Remova esta seção se estiver usando agrupamento *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Logon";

    // Inicializar variáveis gerais de página
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        // Alguns provedores de logon externos requerem sempre um valor URL de retorno
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("email", "É necessário especificar um endereço de email.");
    Validation.RequireField("password", "É necessário especificar uma senha.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "A senha deve ter ao menos 6 caracteres"));

    // Caso esta seja uma solicitação POST, valide e processe os dados
    if (IsPost) {
        AntiForgery.Validate();
        // essa é uma solicitação de logon externa?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty()) {
            OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl }));
            return;
        } else if (Validation.IsValid()) {
            email = Request.Form["email"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 4 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow) {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }

            // Tentativa de logon usando as credenciais fornecidas
            if (WebSecurity.Login(email, password, rememberMe)) {
                Context.RedirectLocal(returnUrl);
                return;
            } else {
                ModelState.AddFormError("O nome de usuário ou senha fornecido está incorreto.");
            }
        }
    }
}

<hgroup class="title">
    <h1>Login:</h1>
</hgroup>

<section id="loginForm">
    <h2>Use uma conta para fazer o logon.</h2>
    <form method="post">
        @AntiForgery.GetHtml()
        @* Se existir um ou mais erros de validação, mostre um erro *@
        @Html.ValidationSummary("Logon bem sucedido. Corrija os erros e tente novamente.", excludeFieldErrors: true, htmlAttributes: null)

        <fieldset>
            <legend>Faça logon na sua conta</legend>
            <ol>
                <li class="email">
                    <label for="email" @if (!ModelState.IsValidField("email"))
                                       {<text>class="error-label"</text>}>Endereço de email</label>
                    <input type="text" id="email" name="email" value="@email" @Validation.For("email")/>
                    @* Escreva quaisquer erros de validação de nome de usuário nesta página *@
                    @Html.ValidationMessage("email")
                </li>
                <li class="password">
                    <label for="password" @if (!ModelState.IsValidField("password")) {<text>class="error-label"</text>}>Senha</label>
                    <input type="password" id="password" name="password" @Validation.For("password")/>
                    @* Escreva quaisquer erros de validação de senha nesta página *@
                    @Html.ValidationMessage("password")
                </li>
                <li class="remember-me">
                    <input type="checkbox" id="rememberMe" name="rememberMe" value="true" checked="@rememberMe" />
                    <label class="checkbox" for="rememberMe">Lembrar-me?</label>
                </li>
            </ol>
            <input type="submit" value="Logon" />
        </fieldset>
    </form>
    <p>
        <a href="~/Account/Register">Não tem uma conta?</a>
        <a href="~/Account/ForgotPassword">Esqueceu sua senha?</a>
    </p>
</section>